---
# Copyright (c) 2017, Tomas Dobrovolny <sdobrtomas@gmail.com>
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# * Redistributions of source code must retain the above copyright notice, this
#   list of conditions and the following disclaimer.
#
# * Redistributions in binary form must reproduce the above copyright notice,
#   this list of conditions and the following disclaimer in the documentation
#   and/or other materials provided with the distribution.
#
# * Neither the name of the copyright holder nor the names of its
#   contributors may be used to endorse or promote products derived from
#   this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

- name: Check template/src colision
  assert:
    that:
      - (item.src is defined and item.template is not defined) or
        (item.src is not defined and item.template is defined)
  with_items: "{{ firewall_firewalld_services }}"

- name: Copy custom firewalld service definitions
  tags:
    - firewalld
    - firewalld_custom_services
  copy:
    src: "{{ item.src }}"
    dest: "/etc/firewalld/services/{{ item.service }}.xml"
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"
    mode: "{{ item.mode }}"
    seuser: "{{ item.seuser }}"
    serole: "{{ item.serole }}"
    setype: "{{ item.setype }}"
    selevel: "{{ item.selevel }}"
  with_items: "{{ firewall_firewalld_services }}"
  when: itm.src is defined
  loop_control:
    label: "Install firewalld service {{item.name }} from {{ item.service }}.xml"
  register: firewalld_custom_services_copy_result

- name: Generate custom firewalld service definitions from templates
  tags:
    - firewalld
    - firewalld_custom_services
  template:
    src: "{{ item.template }}"
    dest: "/etc/firewalld/services/{{ item.service }}.xml"
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"
    mode: "{{ item.mode }}"
    seuser: "{{ item.seuser }}"
    serole: "{{ item.serole }}"
    setype: "{{ item.setype }}"
    selevel: "{{ item.selevel }}"
  with_items: "{{ firewall_firewalld_services }}"
  when: itm.template is defined
  loop_control:
    label: "Generate firewalld service {{ item.name }} from {{ item.template }}"
  register: firewalld_custom_services_generate_result

- name: Wait for firewalld to detect new/changed servivces
  pause:
    seconds: 8
  when: (firewalld_custom_services_generate_result is defined and firewalld_custom_services_generate_result.changed) or (firewalld_custom_services_copy_result is defined and firewalld_custom_services_copy_result.changed)

...
